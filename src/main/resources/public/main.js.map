{"version":3,"sources":["./src/app/projects/add-project/add-project.component.ts","./src/app/projects/add-project/add-project.component.html","./src/app/moks/view-moks/view-moks.component.ts","./src/app/moks/view-moks/view-moks.component.html","./src/environments/environment.ts","./src/app/projects/view-project-list/view-project-list.component.html","./src/app/projects/view-project-list/view-project-list.component.ts","./src/app/shared/helpers/confirm-remove-dialog/confirm-remove-dialog.component.ts","./src/app/shared/helpers/confirm-remove-dialog/confirm-remove-dialog.component.html","./src/app/moks/services/mock-data-store.service.ts","./src/app/projects/services/project.service.ts","./src/app/rules/view-rules/view-rules.component.ts","./src/app/rules/view-rules/view-rules.component.html","./src/app/projects/services/project-data-store.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/shared/modules/material/material.module.ts","./src/app/logs/logs.service.ts","./src/app/app.module.ts","./src/app/rules/services/rules-data-store.service.ts","./src/app/project-details-main-conteiner/project-details-main-conteiner.component.ts","./src/app/project-details-main-conteiner/project-details-main-conteiner.component.html","./src/app/rules/services/rules.service.ts","./src/app/navigations/header/header.component.ts","./src/app/navigations/header/header.component.html","./src/app/moks/add-mock/add-mock.component.ts","./src/app/moks/add-mock/add-mock.component.html","./src/app/logs/view-logs/view-logs.component.ts","./src/app/logs/view-logs/view-logs.component.html","./src/app/rules/add-rule/add-rule.component.ts","./src/app/rules/add-rule/add-rule.component.html","./src/app/moks/services/mock.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {FormArray, FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {debounceTime, filter, map, retry, startWith, switchMap, take} from 'rxjs/operators';\nimport {Router} from '@angular/router';\nimport {ProjectService} from '../services/project.service';\nimport {of} from 'rxjs';\nimport {ProjectDataStoreService} from '../services/project-data-store.service';\n\n@Component({\n  selector: 'app-add-project',\n  templateUrl: './add-project.component.html',\n  styleUrls: ['./add-project.component.scss']\n})\nexport class AddProjectComponent implements OnInit {\n\n  userListMOCK: any[] = [\n    {\n      login: 'dn291092sav',\n      name: 'Шкабара Олександр Володимирович',\n      photoUrl: 'https://staff.privatbank.ua/photo/dn291092sav'\n    },\n    {\n      login: 'dn110191sav1',\n      name: 'Шкабара Анатолій Володимирович',\n      photoUrl: 'https://staff.privatbank.ua/photo/dn110191sav1'\n    }\n  ];\n  selectedProject: any;\n  userListFiltered: any[] = [];\n  editForm: FormGroup;\n\n  get name(): FormControl {\n    return this.editForm.get('name') as FormControl;\n  }\n\n  get description(): FormControl {\n    return this.editForm.get('description') as FormControl;\n  }\n\n\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private projectcService: ProjectService,\n    public projectStore: ProjectDataStoreService\n  ) {\n\n    this.editForm = this.formBuilder.group({\n      name: ['', [Validators.required]],\n      description: ['']\n    });\n  }\n\n  ngOnInit(): void {\n    this.projectStore.getSelectedProject()\n        .pipe( take(1) ).subscribe(\n      (project: any) => {\n        console.log(project);\n        this.selectedProject = project;\n        if (this.selectedProject){\n          this.patchForm(this.selectedProject);\n        }\n      }\n    );\n  }\n\n  patchForm(data: any): void {\n    const convertedData = {...data};\n    this.editForm.patchValue(convertedData, {emitEvent: false, onlySelf: true});\n    this.editForm.updateValueAndValidity();\n  }\n\n  convertedValue(foundObj: any): any {\n    return foundObj ? foundObj.name : null;\n  }\n\n  onSubmit(): void {\n\n    if ( !this.editForm.valid) {\n      return;\n    }\n    const app = this.editForm.value;\n\n    if (this.selectedProject){\n      app.id = this.selectedProject.id;\n      this.projectStore.updateProject(app);\n    } else {\n      this.projectStore.addProject(app);\n    }\n\n\n  }\n\n  cancel(): void {\n    this.router.navigate(['/']);\n  }\n\n  back(): void {\n    history.back();\n  }\n\n}\n","<div class=\"conteiner-fluid conteiner-my\">\n  <div class=\"new-project edit-form \">\n    <div class=\"container-fluid common-card\">\n      <form [formGroup]=\"editForm\" (ngSubmit)=\"onSubmit()\">\n\n        <div class=\"form-group\">\n          <h4>{{selectedProject?.id ? 'Update':'Create'}} project</h4>\n          <hr>\n          <div class=\"row mr-0 ml-0\">\n            <div class=\"col-5\">\n              <mat-form-field class=\"input-width\">\n                <input matInput [placeholder]=\"'name'\" formControlName=\"name\" required>\n                <mat-error *ngIf=\"name.hasError('required')\">\n                  emty field is required\n                </mat-error>\n              </mat-form-field>\n            </div>\n          </div>\n\n          <div class=\"row mr-0 ml-0\">\n            <div class=\"col-7\">\n              <mat-form-field class=\"input-width\">\n                <textarea rows=\"6\" matInput [placeholder]=\"'description'\" formControlName=\"description\" ></textarea>\n              </mat-form-field>\n            </div>\n          </div>\n          <div class=\"row mr-0 ml-0\" *ngIf=\"selectedProject?.id\">\n            <div class=\"col-2\">\n              <h4>Token key: </h4>\n            </div>\n            <div class=\"col-4\">\n                {{selectedProject?.id}}\n            </div>\n          </div>\n        </div>\n\n        <div class=\"row mr-0 ml-0 justify-content-end\">\n          <div class=\"col-4 save-buttons-place\">\n            <button mat-button (click)=\"cancel(); false\">\n              Cancel\n            </button>\n            <button #submitButton [disabled]=\"!editForm.valid\" type=\"submit\" mat-flat-button color=\"primary\">\n              {{selectedProject?.id ? 'Update':'Create'}}\n            </button>\n          </div>\n\n        </div>\n\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {RulesDataStoreService} from '../../rules/services/rules-data-store.service';\nimport {MockService} from '../services/mock.service';\nimport {take} from 'rxjs/operators';\nimport {MockDataStoreService} from '../services/mock-data-store.service';\nimport {ConfirmRemoveDialogComponent} from \"../../shared/helpers/confirm-remove-dialog/confirm-remove-dialog.component\";\nimport {MatDialog} from \"@angular/material/dialog\";\n\n@Component({\n  selector: 'app-view-moks',\n  templateUrl: './view-moks.component.html',\n  styleUrls: ['./view-moks.component.scss']\n})\nexport class ViewMoksComponent implements OnInit {\n\n  // mocks: any[] = [\n  //     {\n  //       id: '6086c495025f5746ff2673c1',\n  //       projectId: '6081f0f7c733683ec98386d2',\n  //       name: 'Test mock 2',\n  //       description: 'Some text about mock',\n  //       state: 'active',\n  //       response: {\n  //         code: 200,\n  //         headers: [{\n  //           name: 'content-type',\n  //           value: 'Json'\n  //         },\n  //           {\n  //             name: 'content-t44ype',\n  //             value: 'Jswefon'\n  //           }\n  //         ],\n  //         body: {\n  //           projectId: '6081f0f7c733683ec98386d2',\n  //           name: 'Test mock',\n  //         }\n  //       }\n  //     },\n  //     {\n  //       id: '608ba912cefb2f3c7e84bc1a',\n  //       projectId: '6081f0f7c733683ec98386d2',\n  //       name: 'Test mock',\n  //       description: 'Some text about mock',\n  //       state: 'active',\n  //       response: {\n  //         code: 200,\n  //         headers: [{\n  //             name: 'content-t44ype',\n  //             value: 'Jswefon'\n  //         }],\n  //         body: '{a:\\'foo\\', \\'b\\':\\'bar\\', c:[false,2,null, \\'null\\']}'\n  //       }\n  //     },\n  //   {\n  //     id: '608ba912cefb2f3c7e84bc1a',\n  //     projectId: '6081f0f7c733683ec98386d2',\n  //     name: 'Test mock',\n  //     description: 'Some text about mock',\n  //     state: 'active',\n  //     response: {\n  //       code: 200,\n  //       headers: [{\n  //         name: 'content-t44ype',\n  //         value: 'Jswefon'\n  //       }],\n  //       body: '{\"projectId\": \"6081f0f7c733683ec98386d2\", \"name\": \"Test mock\"}'\n  //     }\n  //   }\n  //   ];\n   mocks: any[] = [];\n  idApp: any = '';\n\n  constructor(\n    private router: Router,\n    public mockService: MockService,\n    private activatedRoute: ActivatedRoute,\n    public mockStore: MockDataStoreService,\n    public dialog: MatDialog\n  ) {\n    this.idApp = localStorage.getItem('selectedProjectId');\n  }\n\n\n  ngOnInit(): void {\n\n    this.mockService.getMocks(this.idApp).pipe(take(1))\n      .subscribe(\n        (res: any[]) => {\n          this.mocks = res;\n        },\n        (err: any) => console.log('Error retrieving Mocks')\n      );\n  }\n\n  addMock(): void {\n    this.mockStore.setSelectedMock(null);\n    this.router.navigate(['../add-mock'], {relativeTo: this.activatedRoute});\n  }\n\n  editMock(mock: any): void {\n    this.mockStore.setSelectedMock(mock);\n    this.router.navigate(['../add-mock'], {relativeTo: this.activatedRoute});\n  }\n\n  removeMock(mock: any): void {\n\n    const dialogRef = this.dialog.open(ConfirmRemoveDialogComponent, {\n      width: '450px',\n      data: 'Do you want to remove the mock?'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.mockService.removeMock(mock.id).pipe(take(1))\n          .subscribe(\n            (res: any[]) => {\n              this.mocks = this.mocks.filter( m => m.id !== mock.id);\n            },\n            (err: any) => console.log('Error removing Rules')\n          );\n      }\n    });\n  }\n\n}\n","<div class=\"conteiner-fluid app-list\">\n  <div class=\"mb-4\">\n    <button mat-flat-button color=\"primary\"\n            (click)=\"addMock()\">\n      Add Mock\n    </button>\n  </div>\n\n\n  <!--  comment-->\n  <div class=\"card mb-2\" *ngFor=\"let mock of mocks\">\n    <div  class=\"card-header \">\n      <div class=\"d-flex flex-row  left-conteiner\">\n        <div class=\"accordion-item\">\n          <h4 class=\"mb-3\" >\n            {{mock.name}}\n          </h4>\n          <h5 class=\"mb-3\" >\n            {{mock?.description}}\n          </h5>\n\n        </div>\n      </div>\n      <div class=\"d-flex my-buttons \">\n\n        <div class=\"d-flex flex-row right-task-icons\">\n          <div (click)=\"editMock(mock)\" [matTooltip]=\"'edit mock'\" matTooltipClass=\"tooltip-custom\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n              <path fill=\"#000\"  fill-rule=\"nonzero\" d=\"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04a.996.996 0 0 0 0-1.41l-2.34-2.34a.996.996 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"/>\n            </svg>\n          </div>\n\n          <div (click)=\"removeMock(mock)\" [matTooltip]=\"'delete mock'\" matTooltipClass=\"tooltip-custom\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n              <path fill=\"#000\"  fill-rule=\"nonzero\" d=\"M7 18c0 1.1.9 2 2 2h6c1.1 0 2-.9 2-2V8H7v10zM18 5h-3l-1-1h-4L9 5H6v2h12V5z\"/>\n            </svg>\n          </div>\n        </div>\n      </div>\n\n    </div>\n\n  </div>\n\n  <!--  comment end-->\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<div class=\"conteiner-fluid app-list\">\n  <div class=\"mb-4\">\n    <button mat-flat-button color=\"primary\"\n            (click)=\"addProject()\">\n      Add Project\n    </button>\n  </div>\n\n\n<!--  comment-->\n  <div class=\"card mb-2\" *ngFor=\"let project of projectStore.projects | async\">\n    <div  class=\"card-header \">\n      <div class=\"d-flex flex-row  left-conteiner\">\n\n        <div class=\"accordion-item\" (click)=\"selectP(project)\">\n          <h4 class=\"mb-3\" >\n            {{project.name}}\n          </h4>\n          <h5 class=\"mb-3\" >\n            {{project?.description}}\n          </h5>\n\n\n        </div>\n\n      </div>\n      <div class=\"d-flex flex-column \">\n        <div class=\"d-flex flex-row right-task-icons\">\n          <div (click)=\"editProject(project)\" [matTooltip]=\"'edit project'\" matTooltipClass=\"tooltip-custom\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n              <path fill=\"#000\"  fill-rule=\"nonzero\" d=\"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04a.996.996 0 0 0 0-1.41l-2.34-2.34a.996.996 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"/>\n            </svg>\n          </div>\n\n          <div (click)=\"removeProject(project)\" [matTooltip]=\"'delete project'\" matTooltipClass=\"tooltip-custom\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n              <path fill=\"#000\"  fill-rule=\"nonzero\" d=\"M7 18c0 1.1.9 2 2 2h6c1.1 0 2-.9 2-2V8H7v10zM18 5h-3l-1-1h-4L9 5H6v2h12V5z\"/>\n            </svg>\n          </div>\n        </div>\n      </div>\n\n    </div>\n\n  </div>\n\n<!--  comment end-->\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\nimport {ProjectDataStoreService} from '../services/project-data-store.service';\n\n\n\n@Component({\n  selector: 'app-view-project-list',\n  templateUrl: './view-project-list.component.html',\n  styleUrls: ['./view-project-list.component.scss']\n})\nexport class ViewProjectListComponent implements OnInit {\n\n  constructor(\n    private router: Router,\n    public projectStore: ProjectDataStoreService\n  ) { }\n\n  ngOnInit(): void {\n\n  }\n\n  selectP(project: any): void {\n    this.projectStore.setSelectedProject(project);\n    localStorage.setItem('selectedProjectId', project.id);\n    this.router.navigate(['/details-project/' + project.id + '/']);\n  }\n\n\n  addProject(): void {\n    this.projectStore.setSelectedProject(null);\n    this.router.navigate(['/add-project']);\n  }\n\n  removeProject(project: any): void {\n    console.log(project);\n    this.projectStore.deleteProject(project);\n  }\n\n  editProject(project: any): void {\n    this.projectStore.setSelectedProject(project);\n    this.router.navigate(['/add-project']);\n  }\n}\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-confirm-remove-dialog',\n  templateUrl: './confirm-remove-dialog.component.html',\n  styleUrls: ['./confirm-remove-dialog.component.scss']\n})\nexport class ConfirmRemoveDialogComponent {\n\n  constructor(\n    public dialogRef: MatDialogRef<ConfirmRemoveDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public message: string\n  ) { }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n","<div mat-dialog-content class=\"mb-3\">\n  <h4>\n    <b>{{message}}</b>\n  </h4>\n</div>\n<div mat-dialog-actions class=\"justify-content-around actions\">\n  <button  mat-button (click)=\"onNoClick()\">\n    Cancel\n  </button>\n  <button  mat-flat-button color=\"primary\" [mat-dialog-close]=\"true\" cdkFocusInitial>\n    Remove\n  </button>\n</div>\n","import { Injectable } from '@angular/core';\nimport {BehaviorSubject, Observable} from \"rxjs\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {RulesService} from \"../../rules/services/rules.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MockDataStoreService {\n\n  public rulesMock: any[] = [];\n\n  private _MOCKS = new BehaviorSubject<any[]>([]);\n  private selectedMock = new BehaviorSubject<any>(null);\n\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute\n  ) {\n    // this.loadInitialData();\n  }\n\n  getSelectedMock(): Observable<any> {\n    return this.selectedMock.asObservable();\n  }\n\n  setSelectedMock(mock: any): void {\n    return this.selectedMock.next(mock);\n  }\n\n\n  get rules(): Observable<any[]> {\n    return this._MOCKS.asObservable();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectService {\n  private getProjectsUrl = '/project/all';\n  private createProjectUrl = '/project';\n  private removeProjectUrl = '/project/';\n  private getUsersUrl = '/user/search?q=';\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  getProjects(): any {\n    return this.http.get<any>(this.getProjectsUrl);\n  }\n\n  getUsers(name: any): any {\n    return this.http.get<any>(`${this.getUsersUrl}${name}`);\n  }\n\n  createProjects(project: any): any {\n    return this.http.post<any>(this.createProjectUrl, project);\n  }\n\n  updateProject(project: any): any {\n    return this.http.put<any>(this.createProjectUrl, project);\n  }\n\n  removeProjects(idProject: any): any {\n    return this.http.delete<any>(this.removeProjectUrl + idProject);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {RulesDataStoreService} from '../services/rules-data-store.service';\nimport {ProjectDataStoreService} from '../../projects/services/project-data-store.service';\nimport {take} from 'rxjs/operators';\nimport {RulesService} from '../services/rules.service';\nimport {MatDialog} from '@angular/material/dialog';\nimport {ConfirmRemoveDialogComponent} from '../../shared/helpers/confirm-remove-dialog/confirm-remove-dialog.component';\n\n@Component({\n  selector: 'app-view-rules',\n  templateUrl: './view-rules.component.html',\n  styleUrls: ['./view-rules.component.scss']\n})\nexport class ViewRulesComponent implements OnInit {\n\n  // rules: any[] = [\n  // {\n  //   id: '608b041ebd86600008123828',\n  //   name: 'Rule_11',\n  //   description: 'Rule 11',\n  //   state: 'active',\n  //   timeWait: 0,\n  //   requestMethod: 'POST',\n  //   requestUrl: 'https://test.it.loc',\n  //   fullBodyFit: false,\n  //   requestBody: '{\"name\":\"Duncan MacLeod\"}',\n  //   mockId: null,\n  //   projectId: '608a999acd82bb68cfa27d0e'\n  // }, {\n  //   id: '608b0433bd86600008123829',\n  //   name: 'Rule_12',\n  //   description: 'Rule 12',\n  //   state: 'disabled',\n  //   timeWait: 0,\n  //   requestMethod: 'POST',\n  //   requestUrl: 'https://test.it.loc',\n  //   fullBodyFit: false,\n  //   requestBody: '{\"name\":\"Duncan MacLeod\"}',\n  //   mockId: null,\n  //   projectId: '608a999acd82bb68cfa27d0e'\n  // }];\n   rules: any[] = [];\n  idApp: any = '';\n\n  constructor(\n    private router: Router,\n    public rulesStore: RulesDataStoreService,\n    public rulesService: RulesService,\n    public projectStore: ProjectDataStoreService,\n    private activatedRoute: ActivatedRoute,\n    public dialog: MatDialog\n  ) {\n\n    this.idApp = localStorage.getItem('selectedProjectId');\n\n    // this.projectStore.getSelectedProject()\n    //   .pipe( take(1) ).subscribe(\n    //   (project: any) => {\n    //     if (!project) {\n    //       this.router.navigate(['/projects']);\n    //     }\n    //     this.idApp = project.id;\n    //   }\n    // );\n  }\n\n\n  ngOnInit(): void {\n\n    this.rulesService.getRules(this.idApp).pipe(take(1))\n      .subscribe(\n        (res: any[]) => {\n          this.rules = res;\n        },\n        (err: any) => console.log('Error retrieving Rules')\n      );\n  }\n\n  addRule(): void {\n    this.rulesStore.setSelectedRule(null);\n    this.router.navigate([`/details-project/${this.idApp}/add-rule`]);\n  }\n\n  editRule(rule: any): void {\n    this.rulesStore.setSelectedRule(rule);\n    this.router.navigate([`/details-project/${this.idApp}/add-rule`]);\n  }\n\n  removeRule(rule: any): void {\n    const dialogRef = this.dialog.open(ConfirmRemoveDialogComponent, {\n      width: '450px',\n      data: 'Do you want to remove the rule?'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.rulesService.removeRule(rule.id).pipe(take(1))\n          .subscribe(\n            (res: any[]) => {\n              this.rules = this.rules.filter( r => r.id !== rule.id);\n            },\n            (err: any) => console.log('Error removing Rules')\n          );\n      }\n    });\n  }\n\n  changeState(rule: any, event: any): void {\n    if (event.checked) {\n      rule.state = 'active';\n    } else {\n      rule.state = 'disabled';\n    }\n\n    this.rulesService.updateStateRule( rule.id, rule.state).pipe(take(1))\n      .subscribe(\n        (res: any[]) => {\n          this.rulesStore.setSelectedRule(rule);\n          console.log( 'Update rule succsess', res);\n        },\n        (err: any) => console.log('Error removing Rules')\n      );\n  }\n\n}\n","<div class=\"conteiner-fluid app-list\">\n  <div class=\"mb-4\">\n    <button mat-flat-button color=\"primary\"\n            (click)=\"addRule()\">\n      Add Rule\n    </button>\n  </div>\n\n\n  <!--  comment-->\n  <div class=\"card mb-2\" *ngFor=\"let rule of rules\">\n    <div  class=\"card-header \">\n      <div class=\"d-flex flex-row  left-conteiner\">\n        <div class=\"accordion-item\">\n          <h4 class=\"mb-3\" >\n            {{rule.name}}\n          </h4>\n          <h5 class=\"mb-3\" >\n            {{rule?.description}}\n          </h5>\n\n        </div>\n      </div>\n      <div class=\"d-flex my-buttons \">\n\n        <mat-slide-toggle [checked]=\"rule.state === 'active' ? true : false\"\n                          (change)=\"changeState(rule, $event)\">\n        </mat-slide-toggle>\n\n        <div class=\"d-flex flex-row right-task-icons\">\n          <div (click)=\"editRule(rule)\" [matTooltip]=\"'edit rule'\" matTooltipClass=\"tooltip-custom\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n              <path fill=\"#000\"  fill-rule=\"nonzero\" d=\"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04a.996.996 0 0 0 0-1.41l-2.34-2.34a.996.996 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"/>\n            </svg>\n          </div>\n\n          <div (click)=\"removeRule(rule)\" [matTooltip]=\"'delete rule'\" matTooltipClass=\"tooltip-custom\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n              <path fill=\"#000\"  fill-rule=\"nonzero\" d=\"M7 18c0 1.1.9 2 2 2h6c1.1 0 2-.9 2-2V8H7v10zM18 5h-3l-1-1h-4L9 5H6v2h12V5z\"/>\n            </svg>\n          </div>\n        </div>\n      </div>\n\n    </div>\n\n  </div>\n\n  <!--  comment end-->\n</div>\n","import { Injectable } from '@angular/core';\n\nimport {BehaviorSubject, Observable, of, Subject} from 'rxjs';\nimport {ProjectService} from './project.service';\nimport {Router} from '@angular/router';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectDataStoreService {\n   public projectsMock: any[] = [];\n  // public projectsMock: any[] = [\n  //   { description: 'sefwfewerfre',\n  //     id: '609e79623408bf4d5c0e7fb4',\n  //     name: 'rrrrrr',\n  //     users: [\n  //       {login: 'cs251083gan', name: 'Гулич Олександр Миколайович', photoUrl: 'https://staff.privatbank.ua/photo/cs251083gan'},\n  //       {login: 'dn020788mdj1', name: 'Малий Дмитро Юрійович', photoUrl: 'https://staff.privatbank.ua/photo/dn020788mdj1'}\n  //     ],\n  //     state: 'active'},\n  //   {id: '607eea74554d6a1c73970681', name: 'test1234234234', description: 'wefwefweferfwefwefwferfwerfwefgwerg'},\n  //   {id: '607eea74554d6a1c73970681', name: 'test344r34r', description: 'wefwefwefeerwgveyjhyjtujliolonyurfwefgwerg'}\n  // ];\n\n  private _PROJECTS = new BehaviorSubject<any[]>([]);\n  private selectedProject = new BehaviorSubject<any>(null);\n\n  constructor(\n    private router: Router,\n    public projectService: ProjectService\n  ) {\n    this.loadInitialData();\n  }\n\n  getSelectedProject(): Observable<any> {\n      return this.selectedProject.asObservable();\n  }\n\n  setSelectedProject(project: any): void {\n    return this.selectedProject.next(project);\n  }\n\n\n  get projects(): Observable<any[]> {\n     return this._PROJECTS.asObservable();\n  }\n\n  getProjectsList(): any[] {\n    return this._PROJECTS.getValue();\n  }\n\n  loadInitialData(): void {\n    if (this.projectsMock.length > 0) {\n      this._PROJECTS.next(this.projectsMock);\n    }\n    this.projectService.getProjects()\n      .subscribe(\n        (res: any[]) => {\n          this.projectsMock = res;\n          console.log('__this.projectsMock__', this.projectsMock);\n          this._PROJECTS.next(this.projectsMock);\n        },\n        (err: any) => console.log('Error retrieving Projects')\n      );\n  }\n\n  addProject(newProject: any): Observable <any> {\n\n    const obs: Observable <any>  = this.projectService.createProjects(newProject);\n\n    obs.subscribe(\n      res => {\n        const projects: any[] = this._PROJECTS.getValue();\n        projects.push(res);\n        this._PROJECTS.next(projects);\n        this.router.navigate(['/']);\n      });\n\n    return obs;\n  }\n\n  updateProject(updatedP: any): Observable <any>{\n    const obs: Observable <any> = this.projectService.updateProject(updatedP);\n\n    obs.subscribe(\n      res => {\n        const projects: any[] = this._PROJECTS.getValue();\n        const index = projects.findIndex((project) => project.id === updatedP.id);\n        projects[index] = res;\n        this._PROJECTS.next(projects);\n        this.router.navigate(['/']);\n      }\n    );\n\n    return obs;\n  }\n\n  deleteProject(deletedP: any): Observable <any> {\n    const obs: Observable <any> = this.projectService.removeProjects(deletedP.id);\n\n    obs.subscribe(\n      res => {\n        const projects: any[] = this._PROJECTS.getValue();\n        const index = projects.findIndex((project) => project.id === deletedP.id);\n        projects.splice(index, 1);\n        this._PROJECTS.next(projects);\n      }\n    );\n\n    return obs;\n  }\n\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n}\n","<div class=\"container-fluid pl-0 pr-0\">\n  <app-header></app-header>\n  <router-outlet></router-outlet>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule, MatTextareaAutosize} from '@angular/material/input';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatListModule} from '@angular/material/list';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatDialogModule} from '@angular/material/dialog';\n\nconst materialModules = [\n  MatIconModule,\n  MatInputModule,\n  MatButtonModule,\n  MatAutocompleteModule,\n  MatCheckboxModule,\n  MatDatepickerModule,\n  MatFormFieldModule,\n  MatRadioModule,\n  MatSelectModule,\n  MatMenuModule,\n  BrowserAnimationsModule,\n  MatTooltipModule,\n  MatSidenavModule,\n  MatListModule,\n  MatSlideToggleModule,\n  MatDialogModule\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    ...materialModules\n  ],\n  exports: [\n    ...materialModules\n  ]\n})\nexport class MaterialModule { }\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {ActivatedRoute} from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LogsService {\n\n  // GET https://mockproxy.test.it.loc/trace/project/<project-id> - просмотр логов по проекту\n  // GET https://mockproxy.test.it.loc/trace/project/<project-id>/clear - очистка логов по проекту\n  private logsUrl = '/trace/project/';\n  private appId: any = '';\n\n  constructor(\n    private http: HttpClient,\n    private activatedRoute: ActivatedRoute\n  ) {\n    this.appId = this.activatedRoute.snapshot.paramMap.get('idProject');\n    console.log('this.appId in Dervice__', this.appId);\n  }\n\n  getLogs(appId: any): any {\n    return this.http.get<any>(this.logsUrl + appId);\n  }\n\n  clearLogs(appId: any): any {\n    return this.http.get<any>(this.logsUrl + appId + '/clear');\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MaterialModule} from './shared/modules/material/material.module';\nimport { HeaderComponent } from './navigations/header/header.component';\nimport { ViewProjectListComponent } from './projects/view-project-list/view-project-list.component';\nimport { AddProjectComponent } from './projects/add-project/add-project.component';\nimport { ProjectDetailsMainConteinerComponent } from './project-details-main-conteiner/project-details-main-conteiner.component';\nimport { ViewRulesComponent } from './rules/view-rules/view-rules.component';\nimport { ViewMoksComponent } from './moks/view-moks/view-moks.component';\nimport {HttpClientModule} from '@angular/common/http';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { AddRuleComponent } from './rules/add-rule/add-rule.component';\nimport { AddMockComponent } from './moks/add-mock/add-mock.component';\nimport { ViewLogsComponent } from './logs/view-logs/view-logs.component';\nimport { ConfirmRemoveDialogComponent } from './shared/helpers/confirm-remove-dialog/confirm-remove-dialog.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    ViewProjectListComponent,\n    AddProjectComponent,\n    ProjectDetailsMainConteinerComponent,\n    ViewRulesComponent,\n    ViewMoksComponent,\n    AddRuleComponent,\n    AddMockComponent,\n    ViewLogsComponent,\n    ConfirmRemoveDialogComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  entryComponents: [\n    ConfirmRemoveDialogComponent\n  ]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {RulesService} from './rules.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RulesDataStoreService {\n\n  public prulesMock: any[] = [{\n    id: '608b041ebd86600008123828',\n    name: 'Rule_11',\n    description: 'Rule 11',\n    state: 'active',\n    timeWait: 0,\n    requestMethod: 'POST',\n    requestUrl: 'https://test.it.loc',\n    fullBodyFit: false,\n    requestBody: '{\"name\":\"Duncan MacLeod\"}',\n    mockId: null,\n    projectId: '608a999acd82bb68cfa27d0e'\n  }, {\n    id: '608b0433bd86600008123829',\n    name: 'Rule_12',\n    description: 'Rule 12',\n    state: 'active',\n    timeWait: 0,\n    requestMethod: 'POST',\n    requestUrl: 'https://test.it.loc',\n    fullBodyFit: false,\n    requestBody: '{\"name\":\"Duncan MacLeod\"}',\n    mockId: null,\n    projectId: '608a999acd82bb68cfa27d0e'\n  }];\n\n  private _RULES = new BehaviorSubject<any[]>([]);\n  private selectedRule = new BehaviorSubject<any>(null);\n\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    public rulesService: RulesService\n  ) {\n    // this.loadInitialData();\n  }\n\n  getSelectedRule(): Observable<any> {\n    return this.selectedRule.asObservable();\n  }\n\n  setSelectedRule(project: any): void {\n    return this.selectedRule.next(project);\n  }\n\n\n  get rules(): Observable<any[]> {\n    return this._RULES.asObservable();\n  }\n\n  getProjectsList(): any[] {\n    return this._RULES.getValue();\n  }\n\n  // loadInitialData(): void {\n  //   if (this.prulesMock.length > 0) {\n  //     this._RULES.next(this.prulesMock);\n  //   }\n  //   this.rulesService.getRules()\n  //     .subscribe(\n  //       (res: any[]) => {\n  //         this.prulesMock = res;\n  //         console.log('__this.prulesMock__', this.prulesMock);\n  //         this._RULES.next(this.prulesMock);\n  //       },\n  //       (err: any) => console.log('Error retrieving Projects')\n  //     );\n  // }\n\n  addRule_(newRule: any): Observable <any> {\n\n    const obs: Observable <any>  = this.rulesService.createRule(newRule);\n\n    obs.subscribe(\n      res => {\n        const projects: any[] = this._RULES.getValue();\n        projects.push(res);\n        this._RULES.next(projects);\n        this.router.navigate(['/']);\n      });\n\n    return obs;\n  }\n\n  updateProject(updatedP: any): Observable <any>{\n    const obs: Observable <any> = this.rulesService.updateRule(updatedP);\n\n    obs.subscribe(\n      res => {\n        const projects: any[] = this._RULES.getValue();\n        const index = projects.findIndex((project) => project.id === updatedP.id);\n        projects[index] = res;\n        this._RULES.next(projects);\n        this.router.navigate(['/']);\n      }\n    );\n\n    return obs;\n  }\n\n  deleteProject(deletedR: any): Observable <any> {\n    const obs: Observable <any> = this.rulesService.removeRule(deletedR.id);\n\n    obs.subscribe(\n      res => {\n        const projects: any[] = this._RULES.getValue();\n        const index = projects.findIndex((project) => project.id === deletedR.id);\n        projects.splice(index, 1);\n        this._RULES.next(projects);\n      }\n    );\n\n    return obs;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {ActivationEnd, NavigationEnd, Router} from '@angular/router';\nimport {Observable} from 'rxjs';\nimport {filter} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-project-details-main-conteiner',\n  templateUrl: './project-details-main-conteiner.component.html',\n  styleUrls: ['./project-details-main-conteiner.component.scss']\n})\nexport class ProjectDetailsMainConteinerComponent implements OnInit {\n\n  public activeLink = '';\n  public navigationEnd: any;\n  public urls: any = {\n    rules: 'rules',\n    mocks: 'mocks',\n    proxy: 'proxy',\n    settings: 'settings',\n    '': ''\n  };\n\n  constructor(\n    public router: Router\n  ) {}\n\n  ngOnInit(): void {\n\n  }\n\n  public setActiveUrl(url: string): void {\n    const firstUrl = url.split('/')[1];\n    if (this.urls.hasOwnProperty(firstUrl)) {\n      this.activeLink = this.urls[firstUrl];\n    }\n  }\n\n}\n","<mat-drawer-container class=\"sidenav-container\"  autosize>\n  <mat-drawer #sidenav class=\"my-sidenav\" mode=\"side\"  opened=\"true\">\n\n\n    <mat-nav-list class=\"navlist main\" role=\"list\">\n      <a mat-list-item  >\n        <span style=\"white-space: nowrap\">Project Name</span>\n      </a>\n\n      <a mat-list-item\n         [ngClass]=\"{'active-list-item': router.isActive('rules',false)}\"\n         [routerLink]=\"['./rules']\">\n                 <i class=\"material-icons text-white\" > folder </i>\n        <span  style=\"white-space: nowrap\">Rules</span>\n      </a>\n\n      <a mat-list-item\n         [ngClass]=\"{'active-list-item': router.isActive('mocks',false)}\"\n         [routerLink]=\"['./mocks']\" >\n        <i class=\"material-icons text-white\" > folder </i>\n        <span  style=\"white-space: nowrap\">Mocks</span>\n      </a>\n      <a mat-list-item\n         [ngClass]=\"{'active-list-item': router.isActive('/proxy',false)}\"\n         [routerLink]=\"['./logs']\" >\n        <i class=\"material-icons text-white\" > folder </i>\n        <span  style=\"white-space: nowrap\">Logs</span>\n      </a>\n      <a mat-list-item\n         [routerLink]=\"['/projects']\" >\n        <i class=\"material-icons text-white\"> arrow_back </i>\n        <span  style=\"white-space: nowrap\">To All Projects</span>\n      </a>\n    </mat-nav-list>\n  </mat-drawer>\n  <mat-drawer-content>\n    <div class=\"container-fluid pl-0 pr-0\">\n      <router-outlet ></router-outlet>\n    </div>\n  </mat-drawer-content>\n</mat-drawer-container>\n\n\n\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {ActivatedRoute} from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RulesService {\n\n  private getRulesUrl = '/rule/all/';\n  private createRuleUrl = '/rule';\n  private removeRuleUrl = '/rule/';\n  private changeStateRuleUrl = '/rule/';\n  private appId: any = '';\n\n  constructor(\n    private http: HttpClient,\n    private activatedRoute: ActivatedRoute\n  ) {\n    this.appId = this.activatedRoute.snapshot.paramMap.get('idProject');\n    console.log('this.appId in Dervice__', this.appId);\n  }\n\n  getRules(appId: string): any {\n    return this.http.get<any>(this.getRulesUrl + appId);\n  }\n\n  createRule(rule: any): any {\n    return this.http.post<any>(this.createRuleUrl, rule);\n  }\n\n  updateRule(rule: any): any {\n    return this.http.put<any>(this.createRuleUrl, rule);\n  }\n\n  updateStateRule(idRule: any, state: any): any {\n    return this.http.put<any>(this.changeStateRuleUrl + idRule + '/state/' + state, {});\n  }\n\n  removeRule(idRule: any): any {\n    return this.http.delete<any>(this.removeRuleUrl + idRule);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  fio = 'Admin admin';\n  photo: any;\n  urlFoto: any;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  // tslint:disable-next-line:typedef\n  goToInstruction() {\n    window.open('https://confluence.privatbank.ua/pages/viewpage.action?pageId=244288560');\n  }\n\n}\n","<header>\n  <nav class=\"navbar navbar-light border-bottom\">\n\n    <span class=\"navbar-brand mb-0 h1\">\n      <span class=\"iconMP\">MP</span>\n       MockProxy\n    </span>\n\n    <div class=\"form-inline main-icons-place\">\n\n      <button class=\"btn my-2 my-sm-0\" [matMenuTriggerFor]=\"menu\" >\n        <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <defs>\n        <path id=\"a\" d=\"M12 24C5.373 24 0 18.627 0 12S5.373 0 12 0s12 5.373 12 12-5.373 12-12 12zm0-20.4a3.595 3.595 0 0 0-3.6 3.6c0 1.992 1.608 3.6 3.6 3.6s3.6-1.608 3.6-3.6-1.608-3.6-3.6-3.6zm0 17.04c3 0 5.652-1.536 7.2-3.864-.036-2.388-4.812-3.696-7.2-3.696-2.4 0-7.164 1.308-7.2 3.696A8.64 8.64 0 0 0 12 20.64z\"/>\n        </defs>\n        <use fill=\"#000\" fill-opacity=\".5\" fill-rule=\"evenodd\" xlink:href=\"#a\"/>\n        </svg>\n      </button>\n\n      <mat-menu #menu=\"matMenu\" xPosition=\"before\" yPosition=\"below\">\n        <div class=\"fio\">{{fio}}</div>\n        <button mat-menu-item><a href=\"logout\">Выход</a></button>\n      </mat-menu>\n    </div>\n  </nav>\n</header>\n","import { Component, OnInit } from '@angular/core';\nimport {FormArray, FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {RulesDataStoreService} from '../../rules/services/rules-data-store.service';\nimport {RulesService} from '../../rules/services/rules.service';\nimport {ProjectDataStoreService} from '../../projects/services/project-data-store.service';\nimport {MockService} from '../services/mock.service';\nimport {take} from 'rxjs/operators';\nimport {MockDataStoreService} from '../services/mock-data-store.service';\n\n\n@Component({\n  selector: 'app-add-mock',\n  templateUrl: './add-mock.component.html',\n  styleUrls: ['./add-mock.component.scss']\n})\nexport class AddMockComponent implements OnInit {\n\n  selectedMock: any;\n  appId: any = '';\n  editForm: FormGroup;\n\n  //\n  // \"id\": \"6086c495025f5746ff2673c1\",\n  // \"projectId\": \"6081f0f7c733683ec98386d2\",\n  // \"name\": \"Test mock 2\",\n  // \"description\": \"Some text about mock\",\n  // \"state\": \"active\",\n  // \"response\": {\n  //   \"code\": 200,\n  //   \"headers\": {\n  //     \"content-type\": \"text/html\",\n  //     \"my-header-a\": \"value-a\"\n  //   },\n  //   \"body\": \"mocked body...\"\n  // }\n\n  get name(): FormControl {\n    return this.editForm.get('name') as FormControl;\n  }\n\n  get description(): FormControl {\n    return this.editForm.get('description') as FormControl;\n  }\n\n  get code(): FormControl {\n    return this.editForm.get('code') as FormControl;\n  }\n\n  get body(): FormControl {\n    return this.editForm.get('body') as FormControl;\n  }\n\n  get headers(): FormArray {\n    return this.editForm.get('headers') as FormArray;\n  }\n\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    public mockStore: MockDataStoreService,\n    public rulesService: RulesService,\n    public projectStore: ProjectDataStoreService,\n    public mockService: MockService\n  ) {\n    this.editForm = this.formBuilder.group({\n      name: ['', [Validators.required]],\n      description: [''],\n      code: ['', [Validators.required]],\n      body: ['', []],\n      headers: this.formBuilder.array([], [])\n    });\n  }\n\n  ngOnInit(): void {\n    this.appId = localStorage.getItem('selectedProjectId');\n\n\n    this.mockStore.getSelectedMock().subscribe(\n      rule => {\n        this.selectedMock = rule;\n        if (this.selectedMock){\n          this.patchForm(this.selectedMock);\n        }\n        // else {\n        //   this.headers.push(this.createItemHeader('', ''));\n        // }\n      },\n      error => {}\n    );\n  }\n\n  createItemHeader(name: string, value: string): FormGroup {\n    return this.formBuilder.group({\n      name: [name, []],\n      value: [value, []]\n    });\n  }\n\n  addHeader(): void {\n    const header = this.formBuilder.group({\n      name: ['', []],\n      value: ['', []]\n    });\n\n    this.headers.push(header);\n  }\n\n  deleteHeader(index: number): void {\n    this.headers.removeAt(index);\n  }\n\n patchForm(data: any): void {\n   const convertedData = {...data};\n   if (convertedData.hasOwnProperty('response')) {\n     if (convertedData.response.hasOwnProperty('code')) {\n       this.editForm.controls.code.patchValue(convertedData.response.code, {emitEvent: false, onlySelf: true});\n       this.editForm.updateValueAndValidity();\n     }\n\n     if (convertedData.response.hasOwnProperty('body')) {\n       if (!this.isJson(convertedData.response.body)) {\n         this.editForm.controls.body.patchValue( convertedData.response.body, {emitEvent: false, onlySelf: true});\n         this.editForm.updateValueAndValidity();\n       } else {\n         let body = '';\n         let json;\n         try{\n           json = JSON.parse(convertedData.response.body);\n         } catch (e) {\n           console.log (e);\n         }\n\n         body = JSON.stringify(json, undefined, 2);\n\n         this.editForm.controls.body.patchValue( body, {emitEvent: false, onlySelf: true});\n         this.editForm.updateValueAndValidity();\n       }\n     }\n\n\n     if (convertedData.response.hasOwnProperty('headers')) {\n       if (convertedData.response.headers && convertedData.response.headers.length > 0) {\n         convertedData.response.headers.forEach((header: any) => {\n           this.headers.push(this.createItemHeader(header.name, header.value));\n         });\n       }\n     }\n\n     this.editForm.patchValue(convertedData, {emitEvent: false, onlySelf: true});\n     this.editForm.updateValueAndValidity();\n   }\n }\n\n   isJson(item: any): boolean {\n      item = typeof item !== 'string'\n        ? JSON.stringify(item)\n        : item;\n\n      try {\n        item = JSON.parse(item);\n      } catch (e) {\n        return false;\n      }\n\n      if (typeof item === 'object' && item !== null) {\n        return true;\n      }\n\n      return false;\n   }\n\n\n    onSubmit(): void {\n    const formValueRule = this.editForm.value;\n\n    const newMock: any = {\n      name: formValueRule.name,\n      response: {\n        code: formValueRule.code,\n        body: formValueRule.body\n      }\n    };\n\n    if (formValueRule.headers.length > 0) {\n      newMock.response.headers = formValueRule.headers;\n    }\n\n    if (formValueRule.description) {\n      newMock.description = formValueRule.description;\n    }\n\n    if (this.selectedMock) {\n      newMock.id = this.selectedMock.id;\n      console.log('__Submit_edit_', newMock);\n      this.mockService.updateMock(newMock).pipe(take(1))\n        .subscribe(\n          (rez: any) => {\n            this.router.navigate(['../mocks'], {relativeTo: this.activatedRoute});\n          },\n          (err: any) => { }\n        );\n    } else {\n      newMock.projectId = this.appId;\n      console.log('__Submit_new', newMock);\n      this.mockService.createMock(newMock).pipe(take(1))\n        .subscribe(\n          (rez: any) => {\n            this.router.navigate(['../mocks'], {relativeTo: this.activatedRoute});\n          },\n          (err: any) => { }\n        );\n    }\n\n  }\n\n  cancel(): void {\n    this.router.navigate(['../mocks'], {relativeTo: this.activatedRoute});\n  }\n\n}\n","<div class=\"conteiner-fluid conteiner-my\">\n  <div class=\"new-project edit-form \">\n    <div class=\"container-fluid common-card\">\n      <form [formGroup]=\"editForm\" (ngSubmit)=\"onSubmit()\">\n\n        <div class=\"form-group\">\n          <h4>{{selectedMock?.id ? 'Update':'Create'}} mock</h4>\n          <hr>\n          <div class=\"row mr-0 ml-0\">\n            <div class=\"col-8\">\n              <mat-form-field class=\"input-width\">\n                <input matInput [placeholder]=\"'name'\" formControlName=\"name\" required>\n                <mat-error *ngIf=\"name.hasError('required')\">\n                  emty field is required\n                </mat-error>\n              </mat-form-field>\n            </div>\n          </div>\n\n          <div class=\"row mr-0 ml-0\">\n            <div class=\"col-8\">\n              <mat-form-field class=\"input-width\">\n                <textarea rows=\"6\" matInput [placeholder]=\"'description'\" formControlName=\"description\" ></textarea>\n              </mat-form-field>\n            </div>\n          </div>\n\n        </div>\n        <hr>\n        <div class=\"form-group\">\n          <h4>Response</h4>\n\n\n          <div class=\"row mr-0 ml-0\">\n            <div class=\"col-2\">\n              <mat-form-field class=\"input-width\">\n                <input matInput type=\"number\"  [placeholder]=\"'Response code'\" formControlName=\"code\" required >\n                <mat-error *ngIf=\"code.hasError('required')\">\n                  emty field is required\n                </mat-error>\n              </mat-form-field>\n            </div>\n          </div>\n\n          <div  formArrayName=\"headers\" *ngFor=\"let item of headers.controls; let i = index;\" >\n            <div class=\"header\" [formGroupName]=\"i\">\n              <mat-form-field class=\"input-width\">\n                <input matInput [placeholder]=\"'Header name'\" formControlName=\"name\" required>\n                <mat-error *ngIf=\"name.hasError('required')\">\n                  emty field is required\n                </mat-error>\n              </mat-form-field>\n              <mat-form-field class=\"input-width\">\n                <input matInput [placeholder]=\"'Header value'\" formControlName=\"value\" required>\n<!--                <mat-error *ngIf=\"item..hasError('required')\">-->\n<!--                  emty field is required-->\n<!--                </mat-error>-->\n              </mat-form-field>\n              <button mat-icon-button >\n                <mat-icon (click)=\"deleteHeader(i)\">cancel</mat-icon>\n              </button>\n            </div>\n          </div>\n          <button class=\"mt-2\"  mat-flat-button color=\"primary\" (click)=\"addHeader();false\">Add header</button>\n\n\n          <div class=\"row mr-0 ml-0 mt-2\">\n            <div class=\"col-8\">\n              <mat-form-field class=\"input-width\">\n                <textarea rows=\"6\" matInput [placeholder]=\"'Response body'\" formControlName=\"body\" ></textarea>\n<!--                <mat-error *ngIf=\"body.hasError('required')\">-->\n<!--                  emty field is required-->\n<!--                </mat-error>-->\n              </mat-form-field>\n            </div>\n          </div>\n        </div>\n\n\n        <div class=\"row mr-0 ml-0 justify-content-end\">\n          <div class=\"col-4 save-buttons-place\">\n            <button mat-button (click)=\"cancel(); false\">\n              Cancel\n            </button>\n            <button #submitButton [disabled]=\"!editForm.valid\" type=\"submit\" mat-flat-button color=\"primary\">\n              {{selectedMock?.id ? 'Update':'Create'}}\n            </button>\n          </div>\n\n        </div>\n\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {take} from 'rxjs/operators';\nimport {LogsService} from '../logs.service';\n\n@Component({\n  selector: 'app-view-logs',\n  templateUrl: './view-logs.component.html',\n  styleUrls: ['./view-logs.component.scss']\n})\nexport class ViewLogsComponent implements OnInit {\n\n  public logs: any;\n  public idApp: any;\n\n  constructor(\n    private logsService: LogsService\n  ) {\n    this.idApp = localStorage.getItem('selectedProjectId');\n  }\n\n  ngOnInit(): void {\n    this.refresh();\n  }\n\n  refresh(): void {\n    this.logsService.getLogs(this.idApp).pipe(take(1))\n      .subscribe(\n        (res: any[]) => {\n          this.logs = res;\n        },\n        (err: any) => console.log('Error retrieving Rules')\n      );\n  }\n\n  clear(): void {\n    this.logsService.clearLogs(this.idApp).pipe(take(1))\n      .subscribe(\n        (res: any[]) => {\n          this.logs = '';\n        },\n        (err: any) => console.log('Error retrieving Rules')\n      );\n  }\n\n}\n","<div class=\"conteiner-fluid app-list\">\n  <div class=\"mb-4\">\n    <button mat-flat-button color=\"primary\"\n            class=\"mr-3\"\n            (click)=\"refresh()\">\n      Refresh logs\n    </button>\n\n    <button mat-flat-button color=\"primary\"\n            (click)=\"clear()\">\n      Clear logs\n    </button>\n  </div>\n\n\n  <!--  comment-->\n  <div class=\"card mb-2\" >\n    <div  class=\"card-header \">\n      {{logs|json}}\n    </div>\n\n  </div>\n\n  <!--  comment end-->\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {RulesDataStoreService} from '../services/rules-data-store.service';\nimport {RulesService} from '../services/rules.service';\nimport {ProjectDataStoreService} from '../../projects/services/project-data-store.service';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {MAT_RADIO_DEFAULT_OPTIONS} from '@angular/material/radio';\nimport {take} from 'rxjs/operators';\nimport {MockService} from '../../moks/services/mock.service';\n\n@Component({\n  selector: 'app-add-rule',\n  templateUrl: './add-rule.component.html',\n  styleUrls: ['./add-rule.component.scss'],\n  providers: [{\n    provide: MAT_RADIO_DEFAULT_OPTIONS,\n    useValue: { color: 'accent' },\n  }]\n})\nexport class AddRuleComponent implements OnInit {\n  selectedRule: any;\n  appId: any = '';\n  editForm: FormGroup;\n  mocks: any[] = [];\n\n\n  // \"id\": \"608b041ebd86600008123828\",\n  // \"name\": \"Rule_11\",\n  // \"description\": \"Rule 11\",\n  // \"state\": \"active\",\n  // \"timeWait\": 0,\n  // \"requestMethod\": \"POST\",\n  // \"requestUrl\": \"https://test.it.loc\",\n  // \"fullBodyFit\": false,\n  // \"requestBody\": \"{\\\"name\\\":\\\"Duncan MacLeod\\\"}\",\n  // \"mockId\": null,\n  // \"projectId\": \"608a999acd82bb68cfa27d0e\"\n\n  get name(): FormControl {\n    return this.editForm.get('name') as FormControl;\n  }\n\n  get description(): FormControl {\n    return this.editForm.get('description') as FormControl;\n  }\n\n  get state(): FormControl {\n    return this.editForm.get('state') as FormControl;\n  }\n\n  get timeWait(): FormControl {\n    return this.editForm.get('timeWait') as FormControl;\n  }\n\n  get requestMethod(): FormControl {\n    return this.editForm.get('requestMethod') as FormControl;\n  }\n\n  get requestUrl(): FormControl {\n    return this.editForm.get('requestUrl') as FormControl;\n  }\n\n  get fullBodyFit(): FormControl {\n    return this.editForm.get('fullBodyFit') as FormControl;\n  }\n\n  get requestBody(): FormControl {\n    return this.editForm.get('requestBody') as FormControl;\n  }\n\n  get mockId(): FormControl {\n    return this.editForm.get('mockId') as FormControl;\n  }\n\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    public rulesStore: RulesDataStoreService,\n    public rulesService: RulesService,\n    public projectStore: ProjectDataStoreService,\n    public mockService: MockService\n  ) {\n    this.editForm = this.formBuilder.group({\n      name: ['', [Validators.required]],\n      description: [''],\n      state: ['active'],\n      timeWait: [''],\n      requestMethod: [''],\n      requestUrl: [''],\n      fullBodyFit: [false],\n      requestBody: [''],\n      mockId: ['']\n    });\n\n\n  }\n\n\n\n  ngOnInit(): void {\n    this.appId = localStorage.getItem('selectedProjectId');\n    // this.projectStore.getSelectedProject().subscribe(\n    //   rez => {\n    //     this.appId = rez;\n    //   }\n    // );\n    this.mockService.getMocks(this.appId).pipe(take(1))\n      .subscribe(\n        (rez: any) => {\n          this.mocks = rez;\n        },\n        (err: any) => { }\n      );\n\n    this.rulesStore.getSelectedRule().subscribe(\n      rule => {\n        this.selectedRule = rule;\n        if (this.selectedRule){\n          this.patchForm(this.selectedRule);\n        }\n      },\n      error => {}\n    );\n  }\n\n  patchForm(data: any): void {\n    const convertedData = {...data};\n\n    // if (convertedData.hasOwnProperty('state')) {\n    //   convertedData.state = convertedData.state === 'active' ? true : false;\n    // }\n    this.editForm.patchValue(convertedData, {emitEvent: false, onlySelf: true});\n    this.editForm.updateValueAndValidity();\n  }\n\n\n  onSubmit(): void {\n    const formValueRule = this.editForm.value;\n    // formValueRule.fullBodyFit = formValueRule.fullBodyFit ? 'full' : 'part';\n    formValueRule.projectId = this.appId;\n    formValueRule.state = formValueRule.state ? 'active' : 'disabled';\n    const newRule: any = this.cleanObject(formValueRule);\n    newRule.fullBodyFit = formValueRule.fullBodyFit;\n    console.log(newRule);\n    if (this.selectedRule){\n      newRule.id = this.selectedRule.id;\n      console.log('__Submit_edit_', newRule);\n      this.rulesService.updateRule(newRule).pipe(take(1))\n        .subscribe(\n          (rez: any) => {\n            this.router.navigate([`/details-project/${this.appId}/rules`]);\n          },\n          (err: any) => { }\n        );\n    } else {\n      console.log('__Submit_new', newRule);\n      this.rulesService.createRule(newRule).pipe(take(1))\n        .subscribe(\n          (rez: any) => {\n            this.router.navigate([`/details-project/${this.appId}/rules`]);\n          },\n          (err: any) => { }\n        );\n    }\n\n  }\n\n  private cleanObject(myObj: any): void {\n    return Object.entries(myObj).reduce((acc: any, [key, val]) => {\n        if (val) { acc[key] = val; }\n        return acc;\n      }, {});\n  }\n\n  cancel(): void {\n    this.router.navigate([`/details-project/${this.appId}/rules`]);\n  }\n}\n","<div class=\"conteiner-fluid conteiner-my\">\n  <div class=\"new-project edit-form \">\n    <div class=\"container-fluid common-card\">\n      <form [formGroup]=\"editForm\" (ngSubmit)=\"onSubmit()\">\n\n        <div class=\"form-group\">\n          <h4>{{selectedRule?.id ? 'Update':'Create'}} rule</h4>\n          <hr>\n          <div class=\"row mr-0 ml-0\">\n            <div class=\"col-8\">\n              <mat-form-field class=\"input-width\">\n                <input matInput [placeholder]=\"'name'\" formControlName=\"name\" required>\n                <mat-error *ngIf=\"name.hasError('required')\">\n                  emty field is required\n                </mat-error>\n              </mat-form-field>\n            </div>\n          </div>\n\n          <div class=\"row mr-0 ml-0\">\n            <div class=\"col-8\">\n              <mat-form-field class=\"input-width\">\n                <textarea rows=\"6\" matInput [placeholder]=\"'description'\" formControlName=\"description\" ></textarea>\n              </mat-form-field>\n            </div>\n          </div>\n\n          <div class=\"row mr-0 ml-0\">\n            <div class=\"col-8\">\n              <mat-slide-toggle formControlName=\"state\">\n                <span class=\"ml-2 mt-2\">Actite</span>\n              </mat-slide-toggle>\n            </div>\n          </div>\n        </div>\n        <hr>\n        <div class=\"form-group\">\n          <h4>Scheme accordance</h4>\n\n          <div class=\"row mr-0 ml-0\">\n            <div class=\"col-2\">\n              <mat-form-field class=\"input-width\">\n                <mat-select [formControl]=\"requestMethod\" [placeholder]=\"'Request method'\" name=\"requestMethod\" required>\n                  <mat-option value=\"GET\">GET</mat-option>\n                  <mat-option value=\"POST\">POST</mat-option>\n                  <mat-option value=\"PUT\">PUT</mat-option>\n                  <mat-option value=\"DELETE\">DELETE</mat-option>\n                </mat-select>\n\n                <mat-error *ngIf=\"requestMethod.hasError('required')\">\n                  emty field is required\n                </mat-error>\n              </mat-form-field>\n            </div>\n          </div>\n\n\n          <div class=\"row mr-0 ml-0\">\n            <div class=\"col-8\">\n              <mat-form-field class=\"input-width\">\n                <input matInput [placeholder]=\"'Request url'\" formControlName=\"requestUrl\" required>\n                <mat-error *ngIf=\"requestUrl.hasError('required')\">\n                  emty field is required\n                </mat-error>\n              </mat-form-field>\n            </div>\n          </div>\n\n          <div class=\"row mr-0 ml-0\">\n            <div class=\"col-4\">\n              Request body fit:\n              <mat-radio-group formControlName=\"fullBodyFit\">\n                <mat-radio-button [value]=\"true\">full</mat-radio-button>\n                <mat-radio-button class=\"ml-2\" [value]=\"false\">part</mat-radio-button>\n              </mat-radio-group>\n            </div>\n          </div>\n          <div class=\"row mr-0 ml-0\">\n            <div class=\"col-8\">\n              <mat-form-field class=\"input-width\">\n                <textarea rows=\"6\" matInput [placeholder]=\"'Request body'\" formControlName=\"requestBody\" ></textarea>\n              </mat-form-field>\n            </div>\n          </div>\n        </div>\n\n        <hr>\n        <div class=\"form-group\">\n          <h4>Choose mock</h4>\n\n          <div class=\"row mr-0 ml-0\">\n            <div class=\"col-5\">\n              <mat-form-field class=\"input-width\">\n                <mat-select [formControl]=\"mockId\" [placeholder]=\"'Mock'\" name=\"mockId\">\n                  <mat-option value=\"{{mock.id}}\" *ngFor=\"let mock of mocks\">{{mock.name}}</mat-option>\n                </mat-select>\n              </mat-form-field>\n            </div>\n          </div>\n\n          <div class=\"row mr-0 ml-0\">\n            <div class=\"col-3\">\n              <mat-form-field class=\"input-width\">\n                <input matInput type=\"number\" [placeholder]=\"'Time wait response in sec'\" formControlName=\"timeWait\">\n              </mat-form-field>\n            </div>\n          </div>\n        </div>\n\n\n        <hr>\n\n        <div class=\"row mr-0 ml-0 justify-content-end\">\n          <div class=\"col-4 save-buttons-place\">\n            <button mat-button (click)=\"cancel(); false\">\n              Cancel\n            </button>\n            <button #submitButton [disabled]=\"!editForm.valid\" type=\"submit\" mat-flat-button color=\"primary\">\n              {{selectedRule?.id ? 'Update':'Create'}}\n            </button>\n          </div>\n\n        </div>\n\n      </form>\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {ActivatedRoute} from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MockService {\n\n  private getMocksUrl = '/mock/project-id/';\n  private createMockUrl = '/mock';\n  private removeMockUrl = '/mock/';\n  private appId: any = '';\n\n  constructor(\n    private http: HttpClient,\n    private activatedRoute: ActivatedRoute\n  ) {\n    this.appId = this.activatedRoute.snapshot.paramMap.get('idProject');\n    console.log('this.appId in Dervice__', this.appId);\n  }\n\n  getMocks(appId: string): any {\n    return this.http.get<any>(this.getMocksUrl + appId);\n  }\n\n  createMock(mock: any): any {\n    return this.http.post<any>(this.createMockUrl, mock);\n  }\n\n  updateMock(mock: any): any {\n    return this.http.put<any>(this.createMockUrl, mock);\n  }\n\n  removeMock(idMock: any): any {\n    return this.http.delete<any>(this.removeMockUrl + idMock);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {ViewProjectListComponent} from './projects/view-project-list/view-project-list.component';\nimport {AddProjectComponent} from './projects/add-project/add-project.component';\nimport {ProjectDetailsMainConteinerComponent} from './project-details-main-conteiner/project-details-main-conteiner.component';\nimport {ViewMoksComponent} from './moks/view-moks/view-moks.component';\nimport {ViewRulesComponent} from './rules/view-rules/view-rules.component';\nimport {AddRuleComponent} from './rules/add-rule/add-rule.component';\nimport {AddMockComponent} from './moks/add-mock/add-mock.component';\nimport {ViewLogsComponent} from './logs/view-logs/view-logs.component';\n\nconst routes: Routes = [\n  {path: '', component: ViewProjectListComponent},\n  { path: 'projects', component:  ViewProjectListComponent},\n  { path: 'add-project', component:  AddProjectComponent},\n  { path: 'details-project/:idProject',\n    component:  ProjectDetailsMainConteinerComponent,\n    children: [\n      {\n        path: '',\n        component: ViewRulesComponent,\n      },\n      {\n        path: 'rules',\n        component: ViewRulesComponent,\n      },\n      { path: 'add-rule', component:  AddRuleComponent},\n      {\n        path: 'mocks',\n        component: ViewMoksComponent\n      },\n      { path: 'add-mock', component:  AddMockComponent},\n      {\n        path: 'logs',\n        component: ViewLogsComponent\n      }\n    ]\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}